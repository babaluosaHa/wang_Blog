方法覆盖操作
-----------------
1.静态覆盖静态，非静态覆盖非静态，静态性约束保持一致
2.覆盖时，子类方法权限一定要大于等于父类方法权限。eg:父类是public，子类不能是private

final
---------------
1.修饰类，不能被继承。
2.修饰方法，不能覆盖。
3.修饰变量，不能修改，只能赋值一次，相当于常量。
4.一般写在访问限定符（如public）后边

内部类
--------------
1.Benz$Engine.class engine是内部类
2.内部类可以在类成员位置上
3.内部类还可以定义在方法中
4.相当于黑箱 
5.局部类访问局部变量时，不能对局部变量进行重新赋值。java8不要求对局部变量使用final修饰。

抽象类(超类，可以被继承)
------------------
1.抽象方法
	没有函数体的方法，必须使用abstract修饰
	抽象方法必须在抽象类中
	抽象类不能实例化
	抽象类有构造函数
	抽象类可以没有抽象方法
abstract class Animal{
	abstract public void cry();
}

修饰符
----------------
private(不让继承) abstract final static

非法修饰符组合
-----------------
private+abstract
final+abtract

